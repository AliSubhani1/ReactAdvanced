{"ast":null,"code":"var _jsxFileName = \"/Users/ali/Documents/Training/FreeCodeAdvanced/ReactAdvanced/src/tutorial/6-useReducer/setup/index.js\";\nimport React, { useState, useReducer } from \"react\";\nimport Modal from \"./Modal\";\nimport { data } from \"../../../data\"; // reducer function\n\nconst reducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const newPeople = [...state.people, action.payload];\n    return { ...state,\n      people: newPeople,\n      isModalOpen: true,\n      modalContent: \"item added\"\n    };\n  }\n\n  if (action.type === \"NO_VALUE\") {\n    return { ...state,\n      isModalOpen: true,\n      modalContent: \"please enter value\"\n    };\n  }\n\n  if (action.type === \"CLOSE_MODAL\") {\n    return { ...state,\n      isModalOpen: false\n    };\n  }\n\n  throw new Error(\"no matching action type\");\n};\n\nconst defaultState = {\n  people: [],\n  isModalOpen: true,\n  modalContent: \"hello world\"\n};\n\nconst Index = () => {\n  const [name, setName] = useState(\"\");\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name) {\n      const newItem = {\n        id: new Date().getTime().toString(),\n        name\n      };\n      dispatch({\n        type: \"ADD_ITEM\",\n        payload: newItem\n      });\n      setName(\"\");\n    } else {\n      dispatch({\n        type: \"NO_VALUE\"\n      });\n    }\n  };\n\n  const closeModal = () => {\n    dispatch({\n      type: \"CLOSE_MODAL\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, state.isModalOpen && /*#__PURE__*/React.createElement(Modal, {\n    closeModal: closeModal,\n    modalContent: state.modalContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Add\")), state.people.map(person => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: person.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, person.name));\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/ali/Documents/Training/FreeCodeAdvanced/ReactAdvanced/src/tutorial/6-useReducer/setup/index.js"],"names":["React","useState","useReducer","Modal","data","reducer","state","action","type","newPeople","people","payload","isModalOpen","modalContent","Error","defaultState","Index","name","setName","dispatch","handleSubmit","e","preventDefault","newItem","id","Date","getTime","toString","closeModal","target","value","map","person"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport Modal from \"./Modal\";\nimport { data } from \"../../../data\";\n// reducer function\nconst reducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const newPeople = [...state.people, action.payload];\n    return {\n      ...state,\n      people: newPeople,\n      isModalOpen: true,\n      modalContent: \"item added\",\n    };\n  }\n  if (action.type === \"NO_VALUE\") {\n    return { ...state, isModalOpen: true, modalContent: \"please enter value\" };\n  }\n  if (action.type === \"CLOSE_MODAL\") {\n    return { ...state, isModalOpen: false };\n  }\n  throw new Error(\"no matching action type\");\n};\nconst defaultState = {\n  people: [],\n  isModalOpen: true,\n  modalContent: \"hello world\",\n};\nconst Index = () => {\n  const [name, setName] = useState(\"\");\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name) {\n      const newItem = { id: new Date().getTime().toString(), name };\n      dispatch({ type: \"ADD_ITEM\", payload: newItem });\n      setName(\"\");\n    } else {\n      dispatch({ type: \"NO_VALUE\" });\n    }\n  };\n  const closeModal = () => {\n    dispatch({ type: \"CLOSE_MODAL\" });\n  };\n  return (\n    <>\n      {state.isModalOpen && (\n        <Modal closeModal={closeModal} modalContent={state.modalContent} />\n      )}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></input>\n        </div>\n        <button type=\"submit\">Add</button>\n      </form>\n      {state.people.map((person) => {\n        return (\n          <div key={person.id}>\n            <h4>{person.name}</h4>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}